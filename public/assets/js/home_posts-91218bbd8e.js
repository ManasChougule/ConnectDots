{let t=function(){$("#postForm").submit((async function(t){t.preventDefault();const s=document.getElementById("postInput").value.trim(),a=document.getElementById("imageInput").files[0];let o=null;if(a){const t=new FormData;t.append("image",a);const e=await fetch("/images/uploadImage",{method:"POST",body:t});if(!e.ok)return alert("Image upload failed"),!1;o=(await e.json()).file.filename}$.ajax({type:"post",url:"/posts/create",data:JSON.stringify({content:s,imageFileName:o}),contentType:"application/json",success:function(t){if(t.data){let s=e(t.data.post,t.data.user.name);$("#posts-list-container>ul").prepend(s),n($(".delete-post-button",s)),new PostComments(t.data.post._id),new ToggleLike($(".toggle-like-button",s)),document.getElementById("postForm").reset(),$("#selectedImageFileName").text(""),new Noty({theme:"relax",text:"Post published!",type:"success",layout:"topRight",timeout:1500}).show()}else alert("Post created but response is missing data.")},error:function(t){alert("Error while creating post: "+t.message)}})}))},e=function(t,e){return t.imageFileName&&(t.imageUrl=`/images/fetchImage/${t.imageFileName}`),$(`\n            <li id="post-${t._id}" class="post-wrapper list-group-item border rounded p-3 mb-3">\n\n            \x3c!-- ─── Post Content ─────────────────────────────────────────── --\x3e\n            <div class="post d-flex flex-column gap-1">\n\n                \x3c!-- Delete button (if owner/admin) --\x3e\n                <a href="/posts/destroy/${t._id}" class="delete-post-button align-self-end">\n                <i class="bi bi-trash-fill"></i>\n                </a>\n\n                ${t.imageUrl?`\n                <div class="imageDiv text-center my-3">\n                    <img src="${t.imageUrl}" alt="Post image" class="img-fluid rounded" style="max-width: 100%; max-height: 400px; width: auto; height: auto; object-fit: contain;">\n                </div>`:""}\n\n                <p class="mb-1 post-content">${t.content}</p>\n\n                <div class="d-flex flex-wrap gap-3 small text-muted">\n                <span>Author:&nbsp;<strong>${e}</strong></span>\n\n                <a class="toggle-like-button like-button text-black-50"\n                    data-likes="0"\n                    href="/likes/toggle/?id=${t._id}&type=Post"\n                    data-liked="false">\n                    <i class="bi bi-heart-fill"></i>\n                    <span>0</span>\n                </a>\n                </div>\n            </div>\n\n            \x3c!-- ─── Comments ──────────────────────────────────────────────── --\x3e\n            <div class="post-comments mt-3">\n\n                <form id="post-${t._id}-comments-form" class="d-flex gap-2 mb-3" action="/comments/create"\n                    method="POST" onsubmit="return validateCommentForm()">\n                <input type="text" name="content"\n                        class="form-control" placeholder="Type a comment..." required>\n                <input type="hidden" name="post" value="${t._id}">\n                <div class="comment-footer d-flex flex-column">\n                    <button type="submit" class="btn btn-sm btn-primary">Add Comment</button>\n                    <span class="comment-hint small text-muted">Max 80 characters</span>\n                </div>\n                </form>\n\n                \x3c!-- Comments list will be dynamically appended here --\x3e\n                <ul id="post-comments-${t._id}" class="list-unstyled mb-0"></ul>\n            </div>\n            </li>\n        `)},n=function(t){$(t).each((function(){$(this).click((function(t){t.preventDefault();$.ajax({type:"get",url:$(this).prop("href"),success:function(t){$(`#post-${t.data.post_id}`).remove()},error:function(t){console.error("Error deleting post:",t)}})}))}))};$(document).ready((function(){t(),n($(".delete-post-button"))}))}